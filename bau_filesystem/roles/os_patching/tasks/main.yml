---
# tasks file for os_patching
- name: CHECK if etc backup file exist
  become: yes
  become_user: root
  shell: "ls /dnz_support/pre-patch-bkp | grep `date +%Y-%m-%d` | grep etc"
  register: etc_backup
  ignore_errors: yes

- name: Pre-patch backup of /etc
  shell: "mkdir /dnz_support/pre-patch-bkp; tar -czf /dnz_support/pre-patch-bkp/etc.`date +%Y-%m-%d`.tgz /etc"
  become: yes
  become_user: root
  register: backup_etc_output
  when: etc_backup.stdout == ""
  ignore_errors: yes

- name: Check if prepatch file exist
  become: yes
  become_user: root
  shell: "ls /dnz_support/pre-patch-bkp | grep `date +%Y-%m-%d` | grep prepatch"
  register: prepatch_check
  ignore_errors: yes
  tags: prepatch_check
  tags: reboot_only

- name: Pre-patch run config_check.sh
  script: config_check.sh > /dnz_support/pre-patch-bkp/prepatch.`date +%Y-%m-%d`.txt
  become: yes
  become_user: root
  register: config_check_prepatch
  when: prepatch_check.stdout == ""
  ignore_errors: yes
  tags: reboot_only

- name: Output - Exclude packages
  debug: msg="This will exclude {{ os_update_exclusions }}"

- name: PROMPT Pre-patch reboot
  pause: prompt="This will reboot the server (pre-patch). Do you want to proceed? Press (Enter) to continue or Press (ctrl+C) to Abort"


- name: Pre-patch Restart Machine
  shell: /sbin/shutdown -r now "OS patching triggered, pre-patch reboot"
  async: 1
  poll: 0
  ignore_errors: true
  tags: reboot_1

#- name: Pre-patch Wait time for rebooting hosts
#  pause: seconds=180

- name: Pre-patch Wait for hosts to come back
  local_action: wait_for host={{ inventory_hostname }}
                port=22
                state=started
                delay=100
                timeout=3600
  become: false
  tags: reboot_1

- name: PROMPT Pre-patch reboot completed
  pause: prompt="Server/s has been rebooted. Please ask APP/DB people to check. Press (Enter) to continue or Press (ctrl+C) to Abort"
  tags: reboot_1

- name: Check if /usr/share/rhn/RHNS-CA-CERT.bkup exist
  stat: path=/usr/share/rhn/RHNS-CA-CERT.bkup
  register: cert_bkup

- name: Backup /usr/share/rhn/RHNS-CA-CERT
  shell: cp -p /usr/share/rhn/RHNS-CA-CERT /usr/share/rhn/RHNS-CA-CERT.bkup
  when: cert_bkup.stat.exists == False

- name: Copy backup to /usr/share/rhn/RHNS-CA-CERT
  shell: cp -p /usr/share/rhn/RHNS-CA-CERT.bkup /usr/share/rhn/RHNS-CA-CERT
  when: cert_bkup.stat.exists == True

- name: Clean repo
  shell: "yum clean all"
  become: yes
  become_user: root
  register: repo_clean

- name: Update Repo
  shell: "yum repolist"
  become: yes
  become_user: root
  register: repo_update

- name: Output repolist
  debug: msg={{ repo_update.stdout_lines }}
  
- name: PROMPT Check repo
  pause: prompt="Make sure you are you are using the correct repo. Press (Enter) to continue or Press (ctrl+C) to Abort"

- name: Check updates
  shell: "yum check-update --exclude={{os_update_exclusions}}"
  become: yes
  become_user: root
  ignore_errors: yes
  register: before

- name: Output check-update - BEFORE
  debug: msg={{ before.stdout_lines }}

- name: PROMPT Check packages (check-update) and proceed to patch
  pause: prompt="Please check the packages to be updated. Are you sure you want to proceed to patch the server? There is no turning back. Press (Enter) to continue or Press (ctrl+C) to Abort"

- name: Update OS packages to the latest as per RHS with exclusions
  yum: name=* state=latest exclude={{os_update_exclusions}}
  become: yes
  become_user: root
  register: update

- name: PROMPT Post-patch reboot
  pause: prompt="This will reboot the server (post-patch). Do you want to proceed? Press (Enter) to continue or Press (ctrl+C) to Abort"
  tags: reboot_only

- name: Post-patch Restart Machine
  shell: /sbin/shutdown -r now "OS patching triggered, post-patch reboot"
  async: 1
  poll: 0
  ignore_errors: true
  tags: reboot_only

#- name: Post-patch Wait time for rebooting hosts
#  pause: seconds=90
#  tags: reboot_only

- name: Post-patch Wait for hosts to come back
  local_action: wait_for host={{ inventory_hostname }}
                port=22
                state=started
                delay=100
                timeout=3600
  become: false
  tags: reboot_only

- name: Check updates - AFTER
  shell: "yum check-update --exclude={{os_update_exclusions}}"
  become: yes
  become_user: root
  ignore_errors: yes
  register: after

- name: Output check-update AFTER
  debug: msg={{ after.stdout_lines }}

- name: Check if postpatch file exist
  become: yes
  become_user: root
  shell: "ls /dnz_support/pre-patch-bkp | grep `date +%Y-%m-%d` | grep postpatch"
  register: postpatch_check
  ignore_errors: yes
  tags: postpatch_check
  tags: reboot_only

- name: Post-patch run config_check.sh
  script: config_check.sh > /dnz_support/pre-patch-bkp/postpatch.`date +%Y-%m-%d`.txt
  become: yes
  become_user: root
  register: config_check_postpatch
  ignore_errors: yes
  #when: postpatch_check.stdout == ""
  tags: reboot_only

- name: Capture prepatch filename for diff
  become: yes
  become_user: root
  shell: "ls /dnz_support/pre-patch-bkp | grep `date +%Y-%m-%d` | grep prepatch"
  register: prepatch_check_2
  ignore_errors: yes
  tags: prepatch_check_2
  tags: reboot_only

- name: Capture postpatch filename for diff
  become: yes
  become_user: root
  shell: "ls /dnz_support/pre-patch-bkp | grep `date +%Y-%m-%d` | grep postpatch"
  register: postpatch_check_2
  ignore_errors: yes
  tags: postpatch_check_2
  tags: reboot_only

- name: DIFF
  shell: "diff /dnz_support/pre-patch-bkp/{{ prepatch_check_2.stdout }} /dnz_support/pre-patch-bkp/{{ postpatch_check_2.stdout }}"
  become: yes
  become_user: root
  register: diff
  ignore_errors: yes
  tags: diff
  tags: reboot_only

- name: Output POST-PATCH DIFF
  debug: msg={{ diff.stdout_lines }}
  tags: diff_output
  tags: reboot_only
